{"version":3,"sources":["serviceWorker.js","components/Navigation/Navigation.js","components/FaceDetection/FaceDetection.js","components/ExtraInfo/ExtraInfo.js","components/LinkInput/LinkInput.js","components/Rank/Rank.js","constants.js","components/SigninForm/SigninForm.js","components/RegisterForm/RegisterForm.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Navigation","route","onSignInClick","Container","fluid","className","Navbar","bg","variant","sticky","Brand","href","src","width","height","alt","Collapse","Text","onClick","Fragment","FaceDetection","imageLink","box","options","max","id","style","top","top_row","right","right_col","left","left_col","bottom","bottom_row","ExtraInfo","age","gender","charAt","toUpperCase","slice","LinkInput","onInputChange","onSubmit","Row","Form","Group","controlId","Label","Control","type","placeholder","onChange","Button","Rank","entries","name","ParticlesParams","particles","number","value","density","enable","value_area","color","shape","stroke","polygon","nb_sides","image","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","SigninForm","props","onEmailChange","event","setState","signInEmail","target","onPassChange","signInPass","fetch","method","headers","body","JSON","stringify","email","state","toLowerCase","password","then","response","json","user","loaduser","console","log","htmlFor","this","Component","RegisterForm","registerEmail","registerPass","onNameChange","registerName","React","app","Clarifai","App","apiKey","calBoxLocation","boudning_box","outputs","data","regions","region_info","bounding_box","imageWidth","Number","document","querySelector","imageHeight","setBoxLocation","input","models","predict","prediction","catch","err","Object","assign","parseInt","predictions","concepts","params","length","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.7bfa11f5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport { Navbar, Container } from \"react-bootstrap\";\nimport Tilt from \"react-tilt\";\n\nfunction Navigation({ route, onSignInClick }) {\n  return (\n    <Container fluid className=\"p-0 w-100\">\n      <Navbar bg=\"dark\" variant=\"dark\" sticky=\"top\">\n        <Navbar.Brand className=\"ml-3 mr-4\" href=\"#\">\n          <Tilt>\n            <img\n              src=\"https://i.ibb.co/JqQ7fM9/logo.png\"\n              width=\"100\"\n              height=\"100\"\n              className=\"d-inline-block align-top\"\n              alt=\"My Face Recognistion logo\"\n            />\n          </Tilt>\n        </Navbar.Brand>\n        <Navbar.Brand href=\"#\">MY FACE REGONITION</Navbar.Brand>\n        <Navbar.Collapse className=\"justify-content-end mr-2\">\n          {route === \"signIn\" ? (\n            <Navbar.Text\n              onClick={() => onSignInClick(\"signOut\")}\n              className=\"h5\"\n            >\n              Sign out\n            </Navbar.Text>\n          ) : (\n            <React.Fragment>\n              <Navbar.Text\n                onClick={() => onSignInClick(\"signOut\")}\n                className=\"h5\"\n              >\n                {\" Sign in\"}\n              </Navbar.Text>\n              <Navbar.Text\n                onClick={() => onSignInClick(\"register\")}\n                className=\"ml-4 h5\"\n              >\n                {\"Register \"}\n              </Navbar.Text>\n            </React.Fragment>\n          )}\n        </Navbar.Collapse>\n      </Navbar>\n    </Container>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport Tilt from \"react-tilt\";\nimport \"./FaceDetection.css\";\n\nconst FaceDetection = ({ imageLink, box }) => {\n  return (\n    <div className=\"d-flex justify-content-center text-center mt-4\">\n      <Tilt options={{ max: 10 }}>\n        <img id=\"imageBox\" alt=\"\" src={imageLink} width=\"auto\" height=\"500px\" />\n        <div\n          className=\"bounding-box\"\n          style={{\n            top: box.top_row,\n            right: box.right_col,\n            left: box.left_col,\n            bottom: box.bottom_row,\n          }}\n        ></div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default FaceDetection;\n","import React from \"react\";\n\nconst ExtraInfo = ({ age, gender }) => {\n  return (\n    <div className=\"text-center mt-5\">\n      <h3>\n        Estimated Age: {age} , Gender:{\" \"}\n        {gender.charAt(0).toUpperCase() + gender.slice(1)}\n      </h3>\n    </div>\n  );\n};\nexport default ExtraInfo;\n","import React from \"react\";\nimport { Form, Row, Button } from \"react-bootstrap\";\n\nconst LinkInput = ({ onInputChange, onSubmit }) => {\n  return (\n    <Row>\n      <div className=\"w-50 text-center mx-auto mt-3\">\n        <Form>\n          <Form.Group controlId=\"exampleForm.ControlInput1\">\n            <Form.Label>Put Your Image URL Here</Form.Label>\n            <div className=\"input-group\">\n              <Form.Control\n                className=\"mr-1\"\n                type=\"text\"\n                placeholder=\"https://www.example.com/example.jpg\"\n                onChange={onInputChange}\n              />\n              <div className=\"input-group-append\">\n                <Button variant=\"outline-dark\" onClick={onSubmit}>\n                  {\" \"}\n                  Detect{\" \"}\n                </Button>\n              </div>\n            </div>\n          </Form.Group>\n        </Form>\n      </div>\n    </Row>\n  );\n};\nexport default LinkInput;\n","import React from \"react\";\n\nfunction Rank({ entries, name }) {\n  return (\n    <div className=\"text-center display-3 mt-5\">\n      <h2>\n        {\" \"}\n        Hi {name} <br></br> Your Entry Count is {entries}\n      </h2>\n    </div>\n  );\n}\nexport default Rank;\n","export const ParticlesParams = {\n  particles: {\n    number: {\n      value: 80,\n      density: {\n        enable: true,\n        value_area: 800,\n      },\n    },\n    color: {\n      value: \"#ffffff\",\n    },\n    shape: {\n      type: \"circle\",\n      stroke: {\n        width: 0,\n        color: \"#000000\",\n      },\n      polygon: {\n        nb_sides: 5,\n      },\n      image: {\n        src: \"img/github.svg\",\n        width: 100,\n        height: 100,\n      },\n    },\n    opacity: {\n      value: 0.2,\n      random: false,\n      anim: {\n        enable: false,\n        speed: 1,\n        opacity_min: 0.1,\n        sync: false,\n      },\n    },\n    size: {\n      value: 2.945738208161363,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 40,\n        size_min: 0.1,\n        sync: false,\n      },\n    },\n    line_linked: {\n      enable: true,\n      distance: 150,\n      color: \"#ffffff\",\n      opacity: 0.4,\n      width: 1,\n    },\n    move: {\n      enable: true,\n      speed: 6,\n      direction: \"none\",\n      random: false,\n      straight: false,\n      out_mode: \"out\",\n      bounce: false,\n      attract: {\n        enable: false,\n        rotateX: 600,\n        rotateY: 1200,\n      },\n    },\n  },\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\",\n      },\n      onclick: {\n        enable: true,\n        mode: \"push\",\n      },\n      resize: true,\n    },\n    modes: {\n      grab: {\n        distance: 400,\n        line_linked: {\n          opacity: 1,\n        },\n      },\n      bubble: {\n        distance: 400,\n        size: 40,\n        duration: 2,\n        opacity: 8,\n        speed: 3,\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4,\n      },\n      push: {\n        particles_nb: 4,\n      },\n      remove: {\n        particles_nb: 2,\n      },\n    },\n  },\n  retina_detect: true,\n};\n","import React, { Component } from \"react\";\nimport \"./SigninForm.css\";\nclass SigninForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      signInEmail: \"\",\n      signInPass: \"\",\n    };\n  }\n  onEmailChange = (event) => {\n    this.setState({ signInEmail: event.target.value });\n  };\n  onPassChange = (event) => {\n    this.setState({ signInPass: event.target.value });\n  };\n  onSubmit = () => {\n    fetch(\"https://rocky-island-99446.herokuapp.com/signin\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        email: this.state.signInEmail.toLowerCase(),\n        password: this.state.signInPass,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        if (user.id) {\n          this.props.loaduser(user);\n          this.props.onSignInClick(\"signIn\");\n        } else console.log(\"Login Failed\");\n      });\n  };\n  render() {\n    return (\n      <div className=\"mt-5 d-flex jutify-content-center\">\n        <form className=\"form-signin\">\n          <p className=\"h4 text-center mb-4\">Sign in</p>\n          <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\n            Your email\n          </label>\n          <input\n            type=\"email\"\n            id=\"defaultFormLoginEmailEx\"\n            className=\"form-control\"\n            onChange={this.onEmailChange}\n          />\n          <br />\n          <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\n            Your password\n          </label>\n          <input\n            type=\"password\"\n            id=\"defaultFormLoginPasswordEx\"\n            className=\"form-control\"\n            onChange={this.onPassChange}\n          />\n          <div className=\"text-center mt-4\">\n            <button\n              onClick={this.onSubmit}\n              className=\"btn btn-lg mt-5 btn-outline-dark btn-block\"\n              type=\"button\"\n            >\n              Sign In\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SigninForm;\n","import React from \"react\";\nimport \"../SigninForm/SigninForm.css\";\nclass RegisterForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      registerEmail: \"\",\n      registerPass: \"\",\n      registerName: \"\",\n    };\n  }\n  onEmailChange = (event) => {\n    this.setState({ registerEmail: event.target.value });\n  };\n  onPassChange = (event) => {\n    this.setState({ registerPass: event.target.value });\n  };\n  onNameChange = (event) => {\n    this.setState({ registerName: event.target.value });\n  };\n  onSubmit = () => {\n    fetch(\"https://rocky-island-99446.herokuapp.com/register\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        name: this.state.registerName,\n        email: this.state.registerEmail.toLowerCase(),\n        password: this.state.registerPass,\n      }),\n    })\n      .then((response) => response.json())\n      .then((user) => {\n        if (user.id) {\n          this.props.loaduser(user);\n          this.props.onSignInClick(\"signIn\");\n        } else console.log(\"Login Failed\");\n      });\n  };\n  render() {\n    return (\n      <div className=\"mt-5 d-flex jutify-content-center\">\n        <form className=\"form-signin\">\n          <p className=\"h4 text-center mb-4\">Register</p>\n          <label htmlFor=\"name\" className=\"grey-text\">\n            Your name\n          </label>\n          <input\n            type=\"text\"\n            id=\"defaultFormLoginNameEx\"\n            className=\"form-control\"\n            onChange={this.onNameChange}\n          />\n          <br />\n          <label htmlFor=\"defaultFormLoginEmailEx\" className=\"grey-text\">\n            Your email\n          </label>\n          <input\n            type=\"email\"\n            id=\"defaultFormLoginEmailEx\"\n            className=\"form-control\"\n            onChange={this.onEmailChange}\n          />\n          <br />\n          <label htmlFor=\"defaultFormLoginPasswordEx\" className=\"grey-text\">\n            Your password\n          </label>\n          <input\n            type=\"password\"\n            id=\"defaultFormLoginPasswordEx\"\n            className=\"form-control\"\n            onChange={this.onPassChange}\n          />\n          <div className=\"text-center mt-4\">\n            <button\n              onClick={this.onSubmit}\n              className=\"btn btn-lg mt-5 btn-outline-dark btn-block\"\n              color=\"indigo\"\n              type=\"button\"\n            >\n              Register\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterForm;\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport \"./index.css\";\nimport Navigation from \"./components/Navigation/Navigation\";\nimport FaceDetection from \"./components/FaceDetection/FaceDetection\";\nimport ExtraInfo from \"./components/ExtraInfo/ExtraInfo\";\nimport LinkInput from \"./components/LinkInput/LinkInput\";\nimport Rank from \"./components/Rank/Rank\";\nimport Particles from \"react-particles-js\";\nimport { ParticlesParams } from \"./constants\";\nimport Clarifai from \"clarifai\";\nimport SigninForm from \"./components/SigninForm/SigninForm\";\nimport RegisterForm from \"./components/RegisterForm/RegisterForm\";\n\nconst app = new Clarifai.App({\n  apiKey: \"28fea5cd95e24c8a9e12cda6587a686b\",\n});\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: \"\",\n      imageLink: \"\",\n      route: \"signOut\", //signIn, register\n      box: {},\n      age: \"\",\n      gender: \"\",\n      user: {\n        id: 0,\n        name: \"\",\n        email: \"\",\n        entries: 0,\n      },\n    };\n  }\n  calBoxLocation = (response) => {\n    const boudning_box =\n      response.outputs[0].data.regions[0].region_info.bounding_box;\n\n    const imageWidth = Number(document.querySelector(\"#imageBox\").width);\n    const imageHeight = Number(document.querySelector(\"#imageBox\").height);\n    console.log(boudning_box.boudning_box);\n\n    return {\n      bottom_row: imageHeight - boudning_box.bottom_row * imageHeight,\n      left_col: boudning_box.left_col * imageWidth,\n      right_col: imageWidth - boudning_box.right_col * imageWidth,\n      top_row: boudning_box.top_row * imageHeight,\n    };\n  };\n  setBoxLocation = (box) => {\n    console.log(box);\n    this.setState({ box: box });\n  };\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n  onSubmit = () => {\n    this.setState({ imageLink: this.state.input });\n    app.models\n      .predict(\"c0c0ac362b03416da06ab3fa36fb58e3\", this.state.input)\n      .then((response) => {\n        this.setBoxLocation(this.calBoxLocation(response));\n        this.prediction(response);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n\n    fetch(\n      `https://rocky-island-99446.herokuapp.com/img/${this.state.user.id}`,\n      {\n        method: \"put\",\n        headers: { \"Content-Type\": \"application/json\" },\n      }\n    ).then(\n      this.setState(\n        Object.assign(this.state.user, {\n          entries: parseInt(this.state.user.entries) + 1,\n        })\n      )\n    );\n  };\n  prediction = (response) => {\n    const predictions = response.outputs[0].data.regions[0].data.concepts; // 0 to 19 is age prediction, 20 is Gender\n    const age = predictions[0].name;\n    const gender = predictions[20].name;\n    this.setState({ age });\n    this.setState({ gender });\n  };\n  onSignInClick = (route) => {\n    this.setState({ route: route });\n  };\n  loaduser = (data) => {\n    this.setState({ imageLink: \"\", gender: \"\" });\n    this.setState({\n      user: {\n        id: data.id,\n        name: data.name,\n        email: data.email,\n        entries: data.entries,\n      },\n    });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Particles className=\"particles\" params={ParticlesParams} />\n        <Navigation\n          route={this.state.route}\n          onSignInClick={this.onSignInClick}\n        />\n        {this.state.route === \"register\" ? (\n          <RegisterForm\n            onSignInClick={this.onSignInClick}\n            loaduser={this.loaduser}\n          />\n        ) : this.state.route === \"signOut\" ? (\n          <SigninForm\n            onSignInClick={this.onSignInClick}\n            loaduser={this.loaduser}\n          />\n        ) : (\n          <React.Fragment>\n            <Rank\n              entries={this.state.user.entries}\n              name={this.state.user.name}\n            />\n            <LinkInput\n              onInputChange={this.onInputChange}\n              onSubmit={this.onSubmit}\n            />\n            <FaceDetection\n              imageLink={this.state.imageLink}\n              box={this.state.box}\n            />\n            {this.state.gender.length !== 0 ? (\n              <ExtraInfo gender={this.state.gender} age={this.state.age} />\n            ) : (\n              \" \"\n            )}\n          </React.Fragment>\n        )}\n        />\n      </React.Fragment>\n    );\n  }\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}